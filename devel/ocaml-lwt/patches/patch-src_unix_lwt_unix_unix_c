$OpenBSD$
--- src/unix/lwt_unix_unix.c.orig	Thu Jul 19 13:35:56 2012
+++ src/unix/lwt_unix_unix.c	Fri Aug 17 16:44:57 2012
@@ -31,6 +31,7 @@
    +-----------------------------------------------------------------+ */
 
 #include <poll.h>
+#include <sys/uio.h>
 
 CAMLprim value lwt_unix_readable(value fd)
 {
@@ -411,26 +412,47 @@ CAMLprim value lwt_unix_bytes_send_msg(value val_fd, v
    | Credentials                                                     |
    +-----------------------------------------------------------------+ */
 
-#if defined(HAVE_GET_CREDENTIALS)
+#if defined(HAVE_GET_CREDENTIALS_LINUX)
+#define CREDENTIALS_TYPE struct ucred
+#define CREDENTIALS_FIELD(id) id
 
+#elif defined(HAVE_GET_CREDENTIALS_NETBSD)
+#define CREDENTIALS_TYPE struct sockcred
+#define CREDENTIALS_FIELD(id) sc_ ## id
+
+#elif defined(HAVE_GET_CREDENTIALS_OPENBSD)
+#define CREDENTIALS_TYPE struct sockpeercred
+#define CREDENTIALS_FIELD(id) id
+
+#elif defined(HAVE_GET_CREDENTIALS_FREEBSD)
+#define CREDENTIALS_TYPE struct cmsgcred
+#define CREDENTIALS_FIELD(id) cmsgcred_ ## id
+
+#endif
+
+#if defined(CREDENTIALS_TYPE)
+
 #include <sys/un.h>
 
 CAMLprim value lwt_unix_get_credentials(value fd)
 {
     CAMLparam1(fd);
     CAMLlocal1(res);
-    struct ucred cred;
+    CREDENTIALS_TYPE cred;
     socklen_t cred_len = sizeof(cred);
 
     if (getsockopt(Int_val(fd), SOL_SOCKET, SO_PEERCRED, &cred, &cred_len) == -1)
       uerror("get_credentials", Nothing);
 
     res = caml_alloc_tuple(3);
-    Store_field(res, 0, Val_int(cred.pid));
-    Store_field(res, 1, Val_int(cred.uid));
-    Store_field(res, 2, Val_int(cred.gid));
+    Store_field(res, 0, Val_int(cred.CREDENTIALS_FIELD(pid)));
+    Store_field(res, 1, Val_int(cred.CREDENTIALS_FIELD(uid)));
+    Store_field(res, 2, Val_int(cred.CREDENTIALS_FIELD(gid)));
     CAMLreturn(res);
 }
+
+#undef CREDENTIALS_TYPE
+#undef CREDENTIALS_FIELD
 
 #elif defined(HAVE_GETPEEREID)
 
